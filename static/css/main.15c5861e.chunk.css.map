{"version":3,"sources":["webpack://src/index.css","webpack://src/App.css","webpack://src/Detail.scss"],"names":[],"mappings":"AAAA,KACE,QAAS,CACT,mJAEY,CACZ,kCAAmC,CACnC,iCACF,CAEA,KACE,yEAEF,CCZA,KACE,iBACF,CAEA,YACE,gEAAuC,CACvC,uBAA2B,CAC3B,UACF,CAEA,UACE,aAAc,CACd,mBACF,CAEA,8CACE,UACE,2CACF,CACF,CAEA,YACE,wBAAyB,CACzB,gBAAiB,CACjB,YAAa,CACb,qBAAsB,CACtB,kBAAmB,CACnB,sBAAuB,CACvB,4BAA6B,CAC7B,UACF,CAEA,UACE,aACF,CAEA,yBACE,GACE,sBACF,CACA,GACE,uBACF,CACF,CCnCA,KACI,SAHe,CAIlB,qBAKG,eAAmB,CACnB,YAAa,CACb,iBAAkB,CAClB,eAAgB,CAChB,UAAW,CACX,WAAY,CAKf,WAOG,kBAAmB,CACtB,yBAIG,eAAgB","file":"main.15c5861e.chunk.css","sourcesContent":["body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n",".App {\n  text-align: center;\n}\n\n.background {\n  background-image: url(./background.jpg);\n  background-position: center;\n  color: white;\n}\n\n.App-logo {\n  height: 40vmin;\n  pointer-events: none;\n}\n\n@media (prefers-reduced-motion: no-preference) {\n  .App-logo {\n    animation: App-logo-spin infinite 20s linear;\n  }\n}\n\n.App-header {\n  background-color: #282c34;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  font-size: calc(10px + 2vmin);\n  color: white;\n}\n\n.App-link {\n  color: #61dafb;\n}\n\n@keyframes App-logo-spin {\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n}\n","// @import './reset.scss';  이런식으로 import 해서 사용\r\n\r\n// 이제 여기에 sass 문법 작성\r\n// SASS 문법\r\n// 1. 변수에 데이터를 저장해서 쓰자\r\n// 2. $변수명 : 변수에 넣을 값\r\n$메인칼라 : #ff0000;\r\n\r\n.red {\r\n    color: $메인칼라;\r\n}\r\n\r\n// 5. @mixin\r\n// 함수는 @mixin / @include\r\n@mixin 함수() {\r\n    background: #eeeeee;\r\n    padding: 20px;\r\n    border-radius: 5px;\r\n    max-width: 500px;\r\n    width: 100%;\r\n    margin: auto;\r\n}\r\n\r\n.my-alert {\r\n    @include 함수()\r\n}\r\n\r\n// 다른 색상의 alert UI가 필요하면?\r\n// SASS문법을 알면 조금 더 효율적임\r\n.my-alert2 {\r\n    // 4. extend\r\n    @extend .my-alert;  //.my-alert에 있는 모든 속성을 여기에 복사\r\n    background: #bbeb7e;\r\n}\r\n\r\n\r\n.my-alert p {\r\n    margin-bottom: 0;\r\n}\r\n\r\n// 3. nesting 문법\r\n\r\n// div.container h4 {\r\n//     color: blue;\r\n// }\r\n\r\n// div.container p {\r\n//     color: green;\r\n// }\r\n\r\n// 위의 코드처럼 따로따로 작성할 필요없다\r\n// 셀렉터 대신 쓰는 nesting\r\n// div.container {\r\n//     h4 {\r\n//         color: blue;\r\n//     }\r\n//     p {\r\n//         color: green;\r\n//     }\r\n// }"]}